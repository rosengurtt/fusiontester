<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
	<flow name="post:\fusiontest:application\json:FusionTester-config">
		<ee:transform doc:name="Save input in variable 'InputData'" doc:id="0735fdfa-6a38-475d-8897-eed49f911273">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="InputData" ><![CDATA[%dw 2.0
output application/java
---
{
	TestId: payload['TestId'] as Number,
	Clean: payload['Clean'] as Boolean
	}
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<db:stored-procedure doc:name="Initialize tables" doc:id="676537bf-9efb-4d94-ab89-add55ebc5423" config-ref="mssql-jdbc">
			<db:sql>{ call InitializeTest(:TestId,:Clean) }</db:sql>
			<db:input-parameters><![CDATA[#[{ 'TestId' : vars.InputData.TestId,
	'Clean' : vars.InputData.Clean
}]]]></db:input-parameters>
		</db:stored-procedure>
		
	
		<set-payload value="#[vars.InputData.TestId]" doc:name="Set Payload" doc:id="81233c51-2f6f-443f-8a23-26d518b21f7c" />
		<vm:publish queueName="BackgroundJob" doc:name="Add job to queue" doc:id="8316df58-d81c-42cc-8a09-f72fed584503" config-ref="VM_Config_BackgroundJob" />
		<set-payload value="#['Test started']" doc:name="Return message to client" doc:id="dacebd1f-d3b4-4f94-9503-6fbf68b2e5a7" />
    
</flow>
	<flow name="BackgroundJob" doc:id="d3795b0c-9425-4e61-810f-ab8d3b5cc98c" >
		<vm:listener doc:name="Listener" doc:id="044bc086-f58a-4fa4-8184-6dddfacd4e52" config-ref="VM_Config_BackgroundJob" queueName="BackgroundJob"/>
		<flow-ref doc:name="SaveState" doc:id="c6cc6799-ad5b-48ed-8895-f1374201a8e1" name="SaveState"/>
		<flow-ref doc:name="GetStatusOfTestJobAndRecordsYetToProcess" doc:id="c6209b2f-933f-4658-9eae-875defa851fc" name="GetStatusOfTestJobAndRecordsYetToProcess"/>
		<choice doc:name="Verify that TestJob is inactive and there are records to process" doc:id="911d0f75-ba42-42b4-b7c5-882d3632a96a" >
			<when expression="#[(vars.TestJobStatusActive == 'FALSE') and (vars.RecordsYetToProcess &gt; 0)]">
				<set-payload value="#[vars.TestId]" doc:name="Set Payload" doc:id="b6753fe5-ef0f-4785-bdb8-a2828791ec3b" />
				<vm:publish doc:name="Send job to TestJobQueue" doc:id="01e532db-6c4a-4d23-a81e-216536561f9a" config-ref="VM_Config_TestJob" queueName="TestJobQueue" />
			</when>
		</choice>
		<java:invoke-static doc:name="Sleep" doc:id="d41d9419-a9b3-4aed-b807-2aaae590989d" class="fusiontester.ThreadHandling" method="SleepNseconds(int)">
			<java:args ><![CDATA[#[{i: vars.Delay}]]]></java:args>
		</java:invoke-static>
		<choice doc:name="If there are records to process continue" doc:id="ba6e4b04-d8ee-4b1b-b58e-2c1d3c722fc5" >
			<when expression="vars.RecordsYetToProcess &gt; 0">
				<set-payload value="#[vars.TestId]" doc:name="Set Payload" doc:id="386a0ff2-05c0-4434-aa67-7e0b1843f4de" />
				<vm:publish doc:name="Add job to queue" doc:id="72fcb67f-957d-4a33-afbb-b4f2204a80b7" config-ref="VM_Config_BackgroundJob" queueName="BackgroundJob" />
			</when>
			<otherwise >
				<logger level="INFO" doc:name="#['Finished processing test ']" doc:id="1ece9f1a-6c35-44f4-9a42-e562dcfbd6d4" />
			</otherwise>
		</choice>
	</flow>
	<flow name="SaveState" doc:id="8dc90d60-25b1-4dfa-acde-1ebfd690f355" >
		<logger level="INFO" doc:name="Logger" doc:id="0557d1b4-e36b-47f8-b587-bf450419fcd9" message="Entre a backgroundjob" />
		<set-variable value="#[payload]" doc:name="Save TestId" doc:id="1a025aeb-d7f3-49f2-a3a6-5e31882e8cc7" variableName="TestId" />
		<set-variable value="${delay}" doc:name="Set Delay" doc:id="332da731-944f-4d19-93bb-6e15d43557af" variableName="Delay" />
	</flow>
	<flow name="GetStatusOfTestJobAndRecordsYetToProcess" doc:id="367fc517-98ae-4525-ac63-f735cc96037c" >
		<flow-ref doc:name="GetRealCurrentDateTime" doc:id="df017b21-c655-4d00-b412-cf4577595f8d" name="GetRealCurrentDateTime" />
		<db:stored-procedure doc:name="Get Active Status of Testjob" doc:id="114db2a2-6a9d-49c5-852c-40d91fbb369b" config-ref="mssql-jdbc">
			<db:sql>{ call IsTestJobActive(:TestId, :CurrentDateTimeString, :TimeoutInSeconds) }</db:sql>
			<db:input-parameters><![CDATA[#[{ 
'TestId': vars.TestId, 
'CurrentDateTimeString': vars.RealCurrentDateTime,
'TimeoutInSeconds': vars.Delay
}]]]></db:input-parameters>
		</db:stored-procedure>
		<ee:transform doc:name="Save in var 'TestJobStatusActive'" doc:id="c193f4c2-6233-423c-9723-990c7bc38b40" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="TestJobStatusActive" ><![CDATA[%dw 2.0
output application/java
---
payload.resultSet1['BackgroundJobIsActive'][0] ]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<db:stored-procedure doc:name="Get number of records yet to process" doc:id="d7aa2932-73f5-40df-9297-fdcb0ad9a0ac" config-ref="mssql-jdbc" >
			<db:sql >{call GetNumberOfRecordsYetToProcess(:TestId) }</db:sql>
			<db:input-parameters ><![CDATA[#[{ 'TestId': vars.TestId }]]]></db:input-parameters>
		</db:stored-procedure>
		<ee:transform doc:name="Transform Message" doc:id="718aae92-3f1c-4d0b-891b-a19ed71914a1" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="RecordsYetToProcess" ><![CDATA[%dw 2.0
output application/java
---
payload.resultSet1['RemainingRecords'][0] ]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</flow>

</mule>
