<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
	<flow name="post:\fusiontest:application\json:FusionTester-config">
		<ee:transform doc:name="Save input in variable 'InputData'" doc:id="0735fdfa-6a38-475d-8897-eed49f911273">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="InputData" ><![CDATA[%dw 2.0
output application/java
---
{
	TestId: payload['TestId'] as Number,
	Clean: payload['Clean'] as Boolean
	}
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<db:stored-procedure doc:name="Initialize tables" doc:id="676537bf-9efb-4d94-ab89-add55ebc5423" config-ref="mssql-jdbc">
			<db:sql>{ call InitializeTest(:TestId,:Clean) }</db:sql>
			<db:input-parameters><![CDATA[#[{ 'TestId' : vars.InputData.TestId,
	'Clean' : vars.InputData.Clean
}]]]></db:input-parameters>
		</db:stored-procedure>
		<set-payload value="#[vars.InputData.TestId]" doc:name="Set Payload" doc:id="81233c51-2f6f-443f-8a23-26d518b21f7c" />
		<vm:publish queueName="BackgroundJob" doc:name="Add job to queue" doc:id="8316df58-d81c-42cc-8a09-f72fed584503" config-ref="VM_Config_BackgroundJob" />
		<logger level="INFO" doc:name="Logger" doc:id="2a43954e-0e33-4590-a7d5-b529e4b4db4f" message="Started batch test with id #[vars.InputData.TestId]  #['\n']"/>
		<set-payload value="#['Test started']" doc:name="Return message to client" doc:id="dacebd1f-d3b4-4f94-9503-6fbf68b2e5a7" />
    
</flow>
	<flow name="BackgroundJob" doc:id="d3795b0c-9425-4e61-810f-ab8d3b5cc98c" >
		<vm:listener doc:name="JobsQueue" doc:id="044bc086-f58a-4fa4-8184-6dddfacd4e52" config-ref="VM_Config_BackgroundJob" queueName="BackgroundJob"/>
		<flow-ref doc:name="InitializeJob" doc:id="c6cc6799-ad5b-48ed-8895-f1374201a8e1" name="InitializeJob"/>
		<try doc:name="Try" doc:id="9f47f8a1-34bd-48bd-92a2-7d9e684042d0" >
			<flow-ref doc:name="GetStatusOfTestJobAndRecordsYetToProcess" doc:id="c6209b2f-933f-4658-9eae-875defa851fc" name="GetStatusOfTestJobAndRecordsYetToProcess" />
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="e1fc2c49-5ac9-40af-96fb-b172cb9e9224" >
					<java:invoke-static method="SleepNseconds(long) " doc:name="Sleep" doc:id="85d74e8c-ac6e-4ccc-95e6-57f958e23205" class="fusiontester.ThreadHandling" >
						<java:args ><![CDATA[#[{i: vars.vars.SleepTime}]]]></java:args>
					</java:invoke-static>
					<set-payload value="#[vars.TestId]" doc:name="Set Payload" doc:id="0412732d-743e-4836-9a47-12d0116fcbcc" />
					<vm:publish queueName="BackgroundJob" doc:name="Keep looping" doc:id="f1c223f3-1f7b-4655-81f7-b20407923efc" config-ref="VM_Config_BackgroundJob" />
				</on-error-continue>
			</error-handler>
		</try>
		<choice doc:name="Verify that TestJob is inactive and there are records to process" doc:id="911d0f75-ba42-42b4-b7c5-882d3632a96a" >
			<when expression="#[(vars.JobInfo.TestJobStatusActive == 'FALSE') and (vars.JobInfo.RemainingRecords &gt; 0)]">
				<set-payload value="#[vars.TestId]" doc:name="Set Payload" doc:id="b6753fe5-ef0f-4785-bdb8-a2828791ec3b" />
				<vm:publish doc:name="Send job to TestJobQueue" doc:id="01e532db-6c4a-4d23-a81e-216536561f9a" config-ref="VM_Config_TestJob" queueName="TestJobQueue" />
			</when>
		</choice>
		<java:invoke-static doc:name="Sleep" doc:id="d41d9419-a9b3-4aed-b807-2aaae590989d" class="fusiontester.Helpers" method="SleepNmilliSeconds(long) ">
			<java:args ><![CDATA[#[{i: vars.SleepTime}]]]></java:args>
		</java:invoke-static>
		<choice doc:name="If there are records to process continue" doc:id="ba6e4b04-d8ee-4b1b-b58e-2c1d3c722fc5" >
			<when expression="vars.JobInfo.RemainingRecords &gt; 0">
				<set-payload value="#[vars.TestId]" doc:name="Set Payload" doc:id="386a0ff2-05c0-4434-aa67-7e0b1843f4de" />
				<vm:publish doc:name="Keep looping" doc:id="72fcb67f-957d-4a33-afbb-b4f2204a80b7" config-ref="VM_Config_BackgroundJob" queueName="BackgroundJob" />
			</when>
			<otherwise >
				<db:stored-procedure doc:name="Set Test Batch as finished" doc:id="7396551e-ab66-4c5d-bad2-d9304e99fcae" config-ref="mssql-jdbc" >
					<db:sql >{ call UpdateTestBatchAsFinished(:TestId)}</db:sql>
					<db:input-parameters ><![CDATA[#[{ 'TestId': vars.TestId }]]]></db:input-parameters>
				</db:stored-procedure>
				<logger level="INFO" doc:name="Logger" doc:id="43ee44aa-8179-4c11-91e4-6ddb35230828" message="Finished batch job with Testid = #[vars.TestId]   #['\n']"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="InitializeJob" doc:id="8dc90d60-25b1-4dfa-acde-1ebfd690f355" >
		<logger level="INFO" doc:name="Logger" doc:id="0557d1b4-e36b-47f8-b587-bf450419fcd9" message="Started iteration of BackgroundJob  #['\n']" />
		<set-variable value="#[payload]" doc:name="Save TestId" doc:id="1a025aeb-d7f3-49f2-a3a6-5e31882e8cc7" variableName="TestId" />
		<set-variable value="${fusiontester.timeout}" doc:name="Set Timeout" doc:id="332da731-944f-4d19-93bb-6e15d43557af" variableName="FusionTesterTimeout" />
		<set-variable value="#[vars.FusionTesterTimeout/8]" doc:name="Set 'SleepTime'" doc:id="09b8e711-4059-426d-8dfd-fdea60121e2c" variableName="SleepTime"/>
	</flow>
	<flow name="GetStatusOfTestJobAndRecordsYetToProcess" doc:id="367fc517-98ae-4525-ac63-f735cc96037c" >
		<db:stored-procedure doc:name="Get Job Info" doc:id="114db2a2-6a9d-49c5-852c-40d91fbb369b" config-ref="mssql-jdbc">
			<db:sql>{ call GetJobInfo(:TestId,  :TimeoutInMilliSeconds) }</db:sql>
			<db:input-parameters><![CDATA[#[{ 
'TestId': vars.TestId, 
'TimeoutInMilliSeconds': vars.FusionTesterTimeout
}]]]></db:input-parameters>
		</db:stored-procedure>
		<ee:transform doc:name="Save in var 'JobInfo'" doc:id="c193f4c2-6233-423c-9723-990c7bc38b40" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="JobInfo" ><![CDATA[%dw 2.0
output application/java
---
{
	TestJobStatusActive: payload.resultSet1['BackgroundJobIsActive'][0],
	StartDateTime: payload.resultSet1['StartDateTime'][0],
	RemainingRecords: payload.resultSet1['RemainingRecords'][0]
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<java:invoke-static method="CheckTheCurrentTimeLooksCorrect(String)" doc:name="Check current datetime looks correct" doc:id="ecd8da4d-a6b3-4d9b-8489-90f15b71cd10" class="fusiontester.Helpers" target="IsCurrentSystemTimeCorrect">
			<java:args ><![CDATA[#[{ startBatchJobDateTime: vars.JobInfo.StartDateTime }]]]></java:args>
		</java:invoke-static>
		<logger level="INFO" doc:name="Logger" doc:id="ae83393e-cde6-43a2-bb07-1ad0eac65663" message="Found #[vars.JobInfo.RemainingRecords] records to process and active status of TestJob is #[vars.JobInfo.TestJobStatusActive]   #['\n']" />
		<choice doc:name="If system time is incorrect, fixt it and abort" doc:id="8bd3c5a9-84b4-48c2-928b-78a2607cedb1" >
			<when expression="#[vars.IsCurrentSystemTimeCorrect == true]">
				<logger level="INFO" doc:name="Logger" doc:id="1bc32dc9-8179-44e1-8259-29f3fb1d17eb" message="System time looks OK when starting job"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="6224c316-7677-4288-9d42-243befbb2e06" message="Current system time looks wrong when starting Job. Will try to fix"/>
				<vm:publish queueName="SetRealTimeQueue" doc:name="Publish in SetRealTimeQueue" doc:id="2076cfca-eda8-48b5-9985-ae72ec85efc2" config-ref="VM_Config_SetRealTimeLoop" />
				<raise-error doc:name="Raise error" doc:id="ff89090e-3e6e-43f2-8a2a-163e73b4b5f1" type="ANY" description="The system time seems to be wrong, will try to get the right value using a time server"/>
			
			
</otherwise>
		</choice>
	</flow>

</mule>
