<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:java="http://www.mulesoft.org/schema/mule/java" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">

	<flow name="BackgroundJob" doc:id="d3795b0c-9425-4e61-810f-ab8d3b5cc98c" >
		<vm:listener doc:name="JobsQueue" doc:id="044bc086-f58a-4fa4-8184-6dddfacd4e52" config-ref="VM_Config_BackgroundJob" queueName="BackgroundJob"/>
		<flow-ref doc:name="InitializeJob" doc:id="c6cc6799-ad5b-48ed-8895-f1374201a8e1" name="InitializeJob"/>
		<flow-ref doc:name="GetStatusOfTestJobAndRecordsYetToProcess" doc:id="c6209b2f-933f-4658-9eae-875defa851fc" name="GetStatusOfTestJobAndRecordsYetToProcess" />
		<choice doc:name="Verify that TestJob is inactive and there are records to process" doc:id="911d0f75-ba42-42b4-b7c5-882d3632a96a" >
			<when expression="#[(vars.JobInfo.TestIsRunning == 'TRUE') and (vars.JobInfo.IsTestJobActive == 'FALSE') and (vars.JobInfo.RemainingRecords &gt; 0)]">
				<logger level="INFO" doc:name="Logger" doc:id="e12be65d-e769-4178-bea2-826b925b6d94" message="Test-Execution: TestJob is not active so will queue a new job #['\n']"/>
				<set-payload value="#[vars.TestId]" doc:name="Set Payload" doc:id="b6753fe5-ef0f-4785-bdb8-a2828791ec3b" />
				<vm:publish doc:name="Send job to TestJobQueue" doc:id="01e532db-6c4a-4d23-a81e-216536561f9a" config-ref="VM_Config_TestJob" queueName="TestJobQueue" />
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="fb09c0fc-05dc-44e3-ada2-982a0fb05eb4" message="Test-Execution: BackgroundJob skips this iteration because TestJob is active  #['\n']" />
			</otherwise>
		</choice>
		<java:invoke-static doc:name="Sleep" doc:id="d41d9419-a9b3-4aed-b807-2aaae590989d" class="fusiontester.Helpers" method="SleepNmilliSeconds(long) ">
			<java:args ><![CDATA[#[{i: vars.SleepTime}]]]></java:args>
		</java:invoke-static>
		<choice doc:name="If there are records to process continue" doc:id="ba6e4b04-d8ee-4b1b-b58e-2c1d3c722fc5" >
			<when expression="vars.JobInfo.RemainingRecords &gt; 0">
				<logger level="INFO" doc:name="Logger" doc:id="82ec0847-07af-4a60-a099-5a070f440cfb" message="Test-execution: After waking up and finding records still to process send message to queue to keep looping in test-execution #['\n']"/>
				<set-payload value="#[vars.TestId]" doc:name="Set Payload" doc:id="386a0ff2-05c0-4434-aa67-7e0b1843f4de" />
				<vm:publish doc:name="Send to Jobs Queue" doc:id="72fcb67f-957d-4a33-afbb-b4f2204a80b7" config-ref="VM_Config_BackgroundJob" queueName="BackgroundJob" />
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Logger" doc:id="06396650-6dcc-472c-ac73-0fad762ce669" message="Will call UpdateTestBatchAsFinished #['\n']"/>
				<db:stored-procedure doc:name="Set Test Batch as finished" doc:id="7396551e-ab66-4c5d-bad2-d9304e99fcae" config-ref="mssql-jdbc" >
					<db:sql >{ call UpdateTestBatchAsFinished(:TestId)}</db:sql>
					<db:input-parameters ><![CDATA[#[{ 'TestId': vars.TestId }]]]></db:input-parameters>
				</db:stored-procedure>
				<logger level="INFO" doc:name="Logger" doc:id="43ee44aa-8179-4c11-91e4-6ddb35230828" message="Finished batch job with Testid = #[vars.TestId]   #['\n']"/>
			</otherwise>
		</choice>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="1f2bbe5f-7fc2-4a4c-8367-5c940da45517" >
				<logger level="INFO" doc:name="Logger" doc:id="b08e3c15-fcfd-46a0-86b6-6696f08b3151" message="Catch of Test-Execution: An error occured in the background job. Error was #[error.description] #['\n']"/>
				<choice doc:name="Check if background job should continue" doc:id="3aef34a6-8833-4f7a-a1c8-59bccf1532b7" >
					<when expression="#[vars.JobInfo.TestIsRunning == 'FALSE']">
						<logger level="INFO" doc:name="Logger" doc:id="b5ce5aa5-c0fd-4cb0-b469-3cad7b5141e6" message="Catch of Test-execution: Found that job with TestId =  #[vars.TestId] is not supposed to be running. Stopping job #['\n']" />
					</when>
					<otherwise >
						<java:invoke-static doc:name="Invoke static" doc:id="5df092e9-24ec-4614-8514-9ccc4783fa80" class="fusiontester.Helpers" method="SleepNmilliSeconds(long) ">
					<java:args><![CDATA[#[{i: vars.SleepTime}]]]></java:args>
				</java:invoke-static>
						<set-payload value="#[vars.TestId]" doc:name="Set Payload" doc:id="0f7b0186-a314-4bd1-94fd-9ffdcffb2926" />
						<vm:publish queueName="BackgroundJob" doc:name="Send to JobsQueue" doc:id="20bb169f-b5fa-437a-875f-404f559957a9" config-ref="VM_Config_BackgroundJob" />
						<logger level="INFO" doc:name="Log" doc:id="8892dc57-6c2c-48d7-9aa9-cdf95f7e8095" message="Catch of Test-execution: Sent a message to JobsQueue from BackgroundJob in test-execution.xml so the test record is retried #['\n']"/>
					</otherwise>
				</choice>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="InitializeJob" doc:id="8dc90d60-25b1-4dfa-acde-1ebfd690f355" >
		<set-variable value="#[payload]" doc:name="Save TestId" doc:id="1a025aeb-d7f3-49f2-a3a6-5e31882e8cc7" variableName="TestId" />
		<logger level="INFO" doc:name="Logger" doc:id="0557d1b4-e36b-47f8-b587-bf450419fcd9" message="Started iteration of BackgroundJob for Test #[vars.TestId]  #['\n']" />
		<set-variable value="${fusiontester.timeout}" doc:name="Set Timeout" doc:id="332da731-944f-4d19-93bb-6e15d43557af" variableName="FusionTesterTimeout" />
		<set-variable value="#[vars.FusionTesterTimeout/8]" doc:name="Set 'SleepTime'" doc:id="09b8e711-4059-426d-8dfd-fdea60121e2c" variableName="SleepTime"/>
	</flow>
	<flow name="GetStatusOfTestJobAndRecordsYetToProcess" doc:id="367fc517-98ae-4525-ac63-f735cc96037c" >
		<logger level="INFO" doc:name="Logger" doc:id="5f913e30-c339-415c-8722-80b377c90ae0" message="Will call GetJobInfo #['\n']"/>
		<db:stored-procedure doc:name="Get Job Info" doc:id="114db2a2-6a9d-49c5-852c-40d91fbb369b" config-ref="mssql-jdbc">
			<db:sql>{ call GetJobInfo(:TestId,  :TimeoutInMilliSeconds) }</db:sql>
			<db:input-parameters><![CDATA[#[{ 
'TestId': vars.TestId, 
'TimeoutInMilliSeconds': vars.FusionTesterTimeout
}]]]></db:input-parameters>
		</db:stored-procedure>
		<ee:transform doc:name="Save in var 'JobInfo'" doc:id="c193f4c2-6233-423c-9723-990c7bc38b40" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="JobInfo" ><![CDATA[%dw 2.0
output application/java
---
{
	IsTestJobActive: payload.resultSet1['IsTestJobActive'][0],
	StartDateTime: payload.resultSet1['StartDateTime'][0],
	RemainingRecords: payload.resultSet1['RemainingRecords'][0],
	TestIsRunning: payload.resultSet1['TestIsRunning'][0]
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Check if there is a ongoing test-job and if BackgroundJob should be canceled" doc:id="210278e8-b771-4241-a3bf-d9bec8b768f6" >
			<when expression="#[vars.JobInfo.TestIsRunning == 'TRUE']">
				<java:invoke-static method="CheckTheCurrentTimeLooksCorrect(String)" doc:name="Check current datetime looks correct" doc:id="ecd8da4d-a6b3-4d9b-8489-90f15b71cd10" class="fusiontester.Helpers" target="IsCurrentSystemTimeCorrect">
			<java:args><![CDATA[#[{ startBatchJobDateTime: vars.JobInfo.StartDateTime }]]]></java:args>
		</java:invoke-static>
				<logger level="INFO" doc:name="Logger" doc:id="ae83393e-cde6-43a2-bb07-1ad0eac65663" message="Found #[vars.JobInfo.RemainingRecords] records to process and active status of TestJob is #[vars.JobInfo.IsTestJobActive]   #['\n']" />
				<choice doc:name="If system time is incorrect and TestJob is not busy, fixt time and abort" doc:id="8bd3c5a9-84b4-48c2-928b-78a2607cedb1">
			<when expression="#[vars.IsCurrentSystemTimeCorrect == true or vars.JobInfo.IsTestJobActive == 'TRUE']">
				<logger level="INFO" doc:name="Logger" doc:id="1bc32dc9-8179-44e1-8259-29f3fb1d17eb" message="System time looks OK when starting job" />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Logger" doc:id="6224c316-7677-4288-9d42-243befbb2e06" message="Current system time looks wrong when starting Job. Will try to fix" />
				<flow-ref doc:name="SetSystemTimeUsingTimeServer" doc:id="5cc4ca86-701f-4fb6-a1c3-ef058cec9d03" name="SetSystemTimeUsingTimeServer" />
						<raise-error doc:name="Raise error because time looks incorrect" doc:id="ff89090e-3e6e-43f2-8a2a-163e73b4b5f1" type="ANY" description="The system time seemed to be wrong and attempt was done to correct it" />
			
			
</otherwise>
		</choice>
			</when>
			<when expression="#[vars.JobInfo.TestIsRunning == 'FALSE']">
				<raise-error doc:name="Raise error because the job should not be running" type="ANY" description="Raising exception to stop job, because it is supposed not to be running" />
			</when>
			<otherwise>
				<raise-error doc:name="Raise error" doc:id="20404e4d-a928-46ee-9a06-8eedc5886176" type="ANY" description="There is some unexpected condition, so an exception was raised to skip this background job cycle"/>
			</otherwise>
		</choice>
	</flow>

</mule>
